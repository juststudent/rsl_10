scheme repo_im = class
    type
        Filename = Text,    /* filename */
        Variant  = Nat,     /* file variant number */
        Progname = Text,    /* program name */
        Version  = Nat,     /* program version number */

        File    = Filename >< Variant,  /* file variant */
        Program = Progname >< Version,  /* program version */

        Files    = File-list,           /* collection of files */
        Programs = Program-list,        /* collection of programs */
        Deps     = File -m-> File,      /* dependencies of files */
        Atts     = Program -m-> File,   /* attached files for each program */

        /* project */
        Project  = Files >< Programs >< Deps >< Atts

    value
        empty : Project = (<..>, <..>, [], []),

        addFile : File >< Project -~-> Project
        addFile(f, (fs, ps, ds, atts)) is (<.f.>^fs, ps, ds, atts)
        pre ~(f isin elems fs),

        addProgram : Program >< Project -~-> Project
        addProgram(p, (fs, ps, ds, atts)) is (fs, <.p.>^ps, ds, atts)
        pre ~(p isin elems ps),

        attachFile : File >< Program >< Project -~-> Project
        attachFile(f, p, (fs, ps, ds, atts)) is (fs, ps, ds, atts !! [p +> f])
        pre (f isin elems fs) /\ (p isin elems ps) /\
            (all file : File :- ((file isin elems fs) /\ ds(f) = file) => atts(p) = file)

end

